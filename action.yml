name: 'Adept Triage Agent'
description: 'AI-powered test failure triage to determine if failures are test or product issues'
author: 'Adept'
branding:
  icon: 'search'
  color: 'blue'

inputs:
  GITHUB_TOKEN:
    description: 'GitHub token for API access'
    required: false
    default: ${{ github.token }}
  OPENAI_API_KEY:
    description: 'OpenAI API key for AI analysis'
    required: true
  ERROR_MESSAGE:
    description: 'Error message to analyze (optional if using workflow artifacts)'
    required: false
  WORKFLOW_RUN_ID:
    description: 'Workflow run ID to fetch logs from'
    required: false
  JOB_NAME:
    description: 'Specific job name to analyze'
    required: false
  CONFIDENCE_THRESHOLD:
    description: 'Minimum confidence level for verdict (0-100)'
    required: false
    default: '70'
  PR_NUMBER:
    description: 'Pull request number to fetch diff from'
    required: false
  COMMIT_SHA:
    description: 'Commit SHA associated with the test failure'
    required: false
  REPOSITORY:
    description: 'Repository in owner/repo format'
    required: false
    default: ${{ github.repository }}
  TEST_FRAMEWORKS:
    description: 'Test framework to use. Currently only supports "cypress".'
    required: false
    default: 'cypress'
  OUTPUT_REPAIR_CONTEXT:
    description: 'Boolean indicating if repair context should be output (only for TEST_ISSUE verdicts)'
    required: false
    default: 'false'

outputs:
  verdict:
    description: 'TEST_ISSUE or PRODUCT_ISSUE'
  confidence:
    description: 'Confidence score (0-100)'
  reasoning:
    description: 'Detailed explanation of the decision'
  summary:
    description: 'Brief summary for PR comments'
  triage_json:
    description: 'Complete triage analysis as JSON string'
  repair_context:
    description: 'Minimal context for repair agent (only populated for TEST_ISSUE verdicts when OUTPUT_REPAIR_CONTEXT is true)'
  has_repair_context:
    description: 'Boolean indicating if repair context is available'
  has_fix_recommendation:
    description: 'Boolean indicating if a fix recommendation was generated (TEST_ISSUE only)'
  fix_recommendation:
    description: 'Complete fix recommendation as JSON (when available)'
  fix_summary:
    description: 'Human-readable fix recommendation summary (when available)'
  fix_confidence:
    description: 'Confidence score for the fix recommendation (0-100)'

runs:
  using: 'node20'
  main: 'dist/index.js' 